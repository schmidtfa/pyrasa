name: Run pytest tests
on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+\.dev[0-9]+'
      - 'v[0-9]+\.[0-9]+\.[0-9]+'
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  checks: write
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_environment: [testpy311np1pd21, testpy311np1pd22, testpy311np1pd-latest, testpy311np2pd22, testpy311np2pd-latest, testpy312np1pd21, testpy312np1pd22, testpy312np1pd-latest, testpy312np2pd22, testpy312np2pd-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: latest
          cache: true
          locked: false
          frozen: false
          environments: ${{ matrix.test_environment }}
      - run: pixi run -e ${{ matrix.test_environment }} test
      - name: Coveralls
        uses: coverallsapp/github-action@v2
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: latest
          cache: true
          locked: false
          frozen: false
      - run: pixi run lint_ci
  type_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: latest
          cache: true
          locked: false
          frozen: false
      - run: pixi run -e mne check_types

  build:
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    needs: [test, lint, type_check]
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: latest
          cache: true
          locked: false
          frozen: false
      - run: pixi run hatch build
      - uses: actions/upload-artifact@v4
        with:
          name: pyrasa_dist
          path: dist/

  publish_to_testpypi:
    runs-on: ubuntu-latest
    if: ${{ contains(github.ref, 'dev') }}
    needs: [build]
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyrasa
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: pyrasa_dist
          path: dist/
      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish_to_pypi:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.ref, 'dev') }}
    needs: [build]
    environment:
      name: pypi
      url: https://pypi.org/p/pyrasa
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: pyrasa_dist
          path: dist/
      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1